#!/usr/bin/env bash

# exit on error
set -e

# print usage
if [ $# -le 1 ]; then
    echo "Usage: generate_isrs.sh <isrs_gen.c> <isrs_gen.inc>"
    exit 1
fi

# vars
ISRS_GEN_C=$1
ISRS_GEN_ASM=$2

ISRS_WITH_ERROR_CODE="8 10 11 12 13 14 17 21, 29, 30"


#
# Generate C file
#
echo "// !!! THIS FILE IS AUTOGENERATED !!!" > $ISRS_GEN_C
echo "#include <hal/idt.h>" >> $ISRS_GEN_C
echo "" >> $ISRS_GEN_C

for i in $(seq 0 255); do
    echo "void __attribute__((cdecl)) ISR${i}();" >> $ISRS_GEN_C
done

echo "" >> $ISRS_GEN_C
echo "void ISR_initializeGates()" >> $ISRS_GEN_C
echo "{" >> $ISRS_GEN_C

for i in $(seq 0 255); do
    if [ "$i" -eq 128 ]; then
        echo "    IDT_setGate(${i}, ISR${i}, IDT_ATTRIBUTE_32BIT_TRAP_GATE | IDT_ATTRIBUTE_DPL_RING3 | IDT_ATTRIBUTE_PRESENT_BIT);" >> $ISRS_GEN_C
    else
        echo "    IDT_setGate(${i}, ISR${i}, IDT_ATTRIBUTE_32BIT_INTERRUPT_GATE | IDT_ATTRIBUTE_DPL_RING0 | IDT_ATTRIBUTE_PRESENT_BIT);" >> $ISRS_GEN_C
    fi
done


echo "}" >> $ISRS_GEN_C

#
# Generate assembly file
#
echo "; !!! THIS FILE IS AUTOGENERATED !!!" > $ISRS_GEN_ASM

for i in $(seq 0 255); do
    if echo "$ISRS_WITH_ERROR_CODE" | grep -q "\b${i}\b"; then
        echo "ISR_ERRORCODE ${i}" >> $ISRS_GEN_ASM
    else
        echo "ISR_NOERRORCODE ${i}" >> $ISRS_GEN_ASM
    fi
done
